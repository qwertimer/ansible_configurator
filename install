#!/bin/bash


install_prerequisites() {
  # get curl and python3 if needed
  packagesNeeded='curl python3'

    
  if [ -x "$(command -v apk)" ];       then sudo apk add --no-cache $packagesNeeded
  elif [ -x "$(command -v apt-get)" ]; then sudo apt-get install $packagesNeeded
  elif [ -x "$(command -v dnf)" ];     then sudo dnf install $packagesNeeded
  elif [ -x "$(command -v zypper)" ];  then sudo zypper install $packagesNeeded
  elif [ -x "$(command -v pacman)" ];  then sudo  pacman -Syu $packagesNeeded
  else echo "FAILED TO INSTALL PACKAGE: Package manager not found. You must manually install: $packagesNeeded">&2; fi
}

get_pip() {
# Get pip
  if [ ! -x "$(command -v pip)" ]; then
    curl -o /tmp/get-pip.py https://bootstrap.pypa.io/get-pip.py && python3 /tmp/get-pip.py && rm -rf /tmp/get-pip.py
  fi
}

install_ansible() {

  # Get ansible
  if [ ! -x "$(command -v ansible)" ]; then
    python3 -m pip install ansible
  fi
}

choose_type() {
# Start ansible configurator
read -p "Would you like to setup a server or standard install? " installtype
case $installtype in
  server) 
    echo "type: server" > ./vars/vars
    ansible-pull -U https://github.com/qwertimer/ansible_configurator server.yml
    ;;
  standard)

    echo "type: standard" > ./vars/vars
    ansible-pull -U https://github.com/qwertimer/ansible_configurator standard.yml  > /dev/null
    ;;

  test)
    echo "type: test" > ./vars/vars
    ansible-pull --ask-become-pass -U https://github.com/qwertimer/ansible_configurator test.yml
    ;;
esac
}


install_prerequisites
get_pip
install_ansible
choose_type
